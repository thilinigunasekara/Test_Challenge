<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="25" passed="23" failed="0" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Entered Vlaue 1 =  and Value 2 = 5]]>
    </line>
    <line>
      <![CDATA[Result = 5]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 = 6 and Value 2 = ]]>
    </line>
    <line>
      <![CDATA[Result = 6]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 =  and Value 2 = ]]>
    </line>
    <line>
      <![CDATA[Result = 0]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 = 14 and Value 2 = 1000]]>
    </line>
    <line>
      <![CDATA[Result = 1014]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 = -14 and Value 2 = 134]]>
    </line>
    <line>
      <![CDATA[Result = 120]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 = 14 and Value 2 = -134]]>
    </line>
    <line>
      <![CDATA[Result = -120]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 = 1.6345 and Value 2 = 13.6]]>
    </line>
    <line>
      <![CDATA[Result = 15.2345]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 = 1 and Value 2 = 13.6]]>
    </line>
    <line>
      <![CDATA[Result = 14.6]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 = 1.34 and Value 2 = 111]]>
    </line>
    <line>
      <![CDATA[Result = 112.34]]>
    </line>
    <line>
      <![CDATA[Entered Vlaue 1 = 1200000000012345 and Value 2 = 100000000000000]]>
    </line>
    <line>
      <![CDATA[Result = 1300000000012345]]>
    </line>
    <line>
      <![CDATA[Entered Search Text = bobi]]>
    </line>
    <line>
      <![CDATA[Unicorn Name Returned = true]]>
    </line>
    <line>
      <![CDATA[Entered Search Text = BOBI]]>
    </line>
    <line>
      <![CDATA[Unicorn Name Returned = true]]>
    </line>
    <line>
      <![CDATA[Entered Search Text = Bobi]]>
    </line>
    <line>
      <![CDATA[Unicorn Name Returned = true]]>
    </line>
    <line>
      <![CDATA[Entered Search Text = Bob]]>
    </line>
    <line>
      <![CDATA[Failed to Get Result Unicorn Name]]>
    </line>
    <line>
      <![CDATA[Entered Search Text = bobi ]]>
    </line>
    <line>
      <![CDATA[Failed to Get Result Unicorn Name]]>
    </line>
    <line>
      <![CDATA[Entered Search Text = ]]>
    </line>
    <line>
      <![CDATA[Failed to Get Result Unicorn Name]]>
    </line>
    <line>
      <![CDATA[Entered Search Text = bobii]]>
    </line>
    <line>
      <![CDATA[Failed to Get Result Unicorn Name]]>
    </line>
    <line>
      <![CDATA[Entered Search Text = abcd ]]>
    </line>
    <line>
      <![CDATA[Failed to Get Result Unicorn Name]]>
    </line>
    <line>
      <![CDATA[Clicked Let the Battle Begin Button]]>
    </line>
    <line>
      <![CDATA[Invalid Target Count = 8]]>
    </line>
    <line>
      <![CDATA[Valid Target Count = 1]]>
    </line>
    <line>
      <![CDATA[Clicked Let the Battle Begin Button]]>
    </line>
    <line>
      <![CDATA[Valid Target Position = 3]]>
    </line>
    <line>
      <![CDATA[Clicked Let the Battle Begin Button]]>
    </line>
    <line>
      <![CDATA[Valid Target Position = 4]]>
    </line>
    <line>
      <![CDATA[Clicked Let the Battle Begin Button]]>
    </line>
    <line>
      <![CDATA[Clicked Invalid Target Not Orange]]>
    </line>
    <line>
      <![CDATA[Battle Dialog Display = true]]>
    </line>
    <line>
      <![CDATA[Clicked Let the Battle Begin Button]]>
    </line>
    <line>
      <![CDATA[Clicked Valid Target Orange]]>
    </line>
    <line>
      <![CDATA[Battle Dialog Display = false]]>
    </line>
    <line>
      <![CDATA[Clicked Let the Battle Begin Button]]>
    </line>
    <line>
      <![CDATA[Hit the Escape Key]]>
    </line>
    <line>
      <![CDATA[Battle Dialog Display = true]]>
    </line>
  </reporter-output>
  <suite started-at="2022-08-16T17:58:50 IST" name="Test Challenge" finished-at="2022-08-16T17:59:59 IST" duration-ms="69020">
    <groups>
    </groups>
    <test started-at="2022-08-16T17:58:50 IST" name="Test-Automation" finished-at="2022-08-16T17:59:59 IST" duration-ms="69020">
      <class name="com.tests.SummationTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:58:50 IST" name="setUp" finished-at="2022-08-16T17:59:01 IST" duration-ms="11679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testVerifyResultIfFirstValuesBlank()[pri:0, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:01 IST" name="testVerifyResultIfFirstValuesBlank" finished-at="2022-08-16T17:59:02 IST" duration-ms="847" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 =  and Value 2 = 5]]>
            </line>
            <line>
              <![CDATA[Result = 5]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfFirstValuesBlank -->
        <test-method signature="testVerifyResultIfSecondValues_Blank()[pri:1, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:02 IST" name="testVerifyResultIfSecondValues_Blank" finished-at="2022-08-16T17:59:03 IST" duration-ms="810" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 = 6 and Value 2 = ]]>
            </line>
            <line>
              <![CDATA[Result = 6]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfSecondValues_Blank -->
        <test-method signature="testVerifyResultIfBothValuesBlank()[pri:2, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:03 IST" name="testVerifyResultIfBothValuesBlank" finished-at="2022-08-16T17:59:04 IST" duration-ms="759" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 =  and Value 2 = ]]>
            </line>
            <line>
              <![CDATA[Result = 0]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfBothValuesBlank -->
        <test-method signature="testVerifyResultIfBothValuesPositive()[pri:3, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:04 IST" name="testVerifyResultIfBothValuesPositive" finished-at="2022-08-16T17:59:04 IST" duration-ms="764" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 = 14 and Value 2 = 1000]]>
            </line>
            <line>
              <![CDATA[Result = 1014]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfBothValuesPositive -->
        <test-method signature="testVerifyResultIfFirstValueNegative()[pri:4, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:04 IST" name="testVerifyResultIfFirstValueNegative" finished-at="2022-08-16T17:59:05 IST" duration-ms="795" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 = -14 and Value 2 = 134]]>
            </line>
            <line>
              <![CDATA[Result = 120]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfFirstValueNegative -->
        <test-method signature="testVerifyResultIfSecondValueNegative()[pri:5, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:05 IST" name="testVerifyResultIfSecondValueNegative" finished-at="2022-08-16T17:59:06 IST" duration-ms="773" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 = 14 and Value 2 = -134]]>
            </line>
            <line>
              <![CDATA[Result = -120]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfSecondValueNegative -->
        <test-method signature="testVerifyResultIfBothValuesDecimal()[pri:6, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:06 IST" name="testVerifyResultIfBothValuesDecimal" finished-at="2022-08-16T17:59:07 IST" duration-ms="764" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 = 1.6345 and Value 2 = 13.6]]>
            </line>
            <line>
              <![CDATA[Result = 15.2345]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfBothValuesDecimal -->
        <test-method signature="testVerifyResultIfFirstValueIntegerAndSecondValueDecimal()[pri:7, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:07 IST" name="testVerifyResultIfFirstValueIntegerAndSecondValueDecimal" finished-at="2022-08-16T17:59:08 IST" duration-ms="777" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 = 1 and Value 2 = 13.6]]>
            </line>
            <line>
              <![CDATA[Result = 14.6]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfFirstValueIntegerAndSecondValueDecimal -->
        <test-method signature="testVerifyResultIfFirstValueDecimalAndSecondValueInteger()[pri:8, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:08 IST" name="testVerifyResultIfFirstValueDecimalAndSecondValueInteger" finished-at="2022-08-16T17:59:08 IST" duration-ms="766" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 = 1.34 and Value 2 = 111]]>
            </line>
            <line>
              <![CDATA[Result = 112.34]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfFirstValueDecimalAndSecondValueInteger -->
        <test-method signature="testVerifyResultIfCalculatingLongIntegerValues()[pri:9, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:08 IST" name="testVerifyResultIfCalculatingLongIntegerValues" finished-at="2022-08-16T17:59:09 IST" duration-ms="810" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Vlaue 1 = 1200000000012345 and Value 2 = 100000000000000]]>
            </line>
            <line>
              <![CDATA[Result = 1300000000012345]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyResultIfCalculatingLongIntegerValues -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:09 IST" name="closeDriver" finished-at="2022-08-16T17:59:09 IST" duration-ms="184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
        <test-method is-config="true" signature="quitDriver()[pri:0, instance:com.tests.SummationTest@6591f517]" started-at="2022-08-16T17:59:59 IST" name="quitDriver" finished-at="2022-08-16T17:59:59 IST" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitDriver -->
      </class> <!-- com.tests.SummationTest -->
      <class name="com.tests.TargetValidateTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tests.TargetValidateTest@429bd883]" started-at="2022-08-16T17:59:34 IST" name="setUp" finished-at="2022-08-16T17:59:42 IST" duration-ms="7880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="tetsVerifyUserCanSeeBattleDialogWithOneValidAndOtherTargets()[pri:0, instance:com.tests.TargetValidateTest@429bd883]" started-at="2022-08-16T17:59:42 IST" name="tetsVerifyUserCanSeeBattleDialogWithOneValidAndOtherTargets" finished-at="2022-08-16T17:59:43 IST" duration-ms="768" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Clicked Let the Battle Begin Button]]>
            </line>
            <line>
              <![CDATA[Invalid Target Count = 8]]>
            </line>
            <line>
              <![CDATA[Valid Target Count = 1]]>
            </line>
          </reporter-output>
        </test-method> <!-- tetsVerifyUserCanSeeBattleDialogWithOneValidAndOtherTargets -->
        <test-method signature="testVerifyValidTargetAlwaysChangesItsPosition()[pri:1, instance:com.tests.TargetValidateTest@429bd883]" started-at="2022-08-16T17:59:43 IST" name="testVerifyValidTargetAlwaysChangesItsPosition" finished-at="2022-08-16T17:59:48 IST" duration-ms="4918" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Clicked Let the Battle Begin Button]]>
            </line>
            <line>
              <![CDATA[Valid Target Position = 3]]>
            </line>
            <line>
              <![CDATA[Clicked Let the Battle Begin Button]]>
            </line>
            <line>
              <![CDATA[Valid Target Position = 4]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyValidTargetAlwaysChangesItsPosition -->
        <test-method signature="testVerifyUser_Clicks_Invalid_Target()[pri:2, instance:com.tests.TargetValidateTest@429bd883]" started-at="2022-08-16T17:59:48 IST" name="testVerifyUser_Clicks_Invalid_Target" finished-at="2022-08-16T17:59:51 IST" duration-ms="2597" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Clicked Let the Battle Begin Button]]>
            </line>
            <line>
              <![CDATA[Clicked Invalid Target Not Orange]]>
            </line>
            <line>
              <![CDATA[Battle Dialog Display = true]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUser_Clicks_Invalid_Target -->
        <test-method signature="testVerifyClicksValidTargetAndBattleDialogClosed()[pri:3, instance:com.tests.TargetValidateTest@429bd883]" started-at="2022-08-16T17:59:51 IST" name="testVerifyClicksValidTargetAndBattleDialogClosed" finished-at="2022-08-16T17:59:56 IST" duration-ms="4841" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Clicked Let the Battle Begin Button]]>
            </line>
            <line>
              <![CDATA[Clicked Valid Target Orange]]>
            </line>
            <line>
              <![CDATA[Battle Dialog Display = false]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyClicksValidTargetAndBattleDialogClosed -->
        <test-method signature="testVerifyPopupNotClosingWhenHitEscape()[pri:4, instance:com.tests.TargetValidateTest@429bd883]" started-at="2022-08-16T17:59:56 IST" name="testVerifyPopupNotClosingWhenHitEscape" finished-at="2022-08-16T17:59:58 IST" duration-ms="2969" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Clicked Let the Battle Begin Button]]>
            </line>
            <line>
              <![CDATA[Hit the Escape Key]]>
            </line>
            <line>
              <![CDATA[Battle Dialog Display = true]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyPopupNotClosingWhenHitEscape -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:com.tests.TargetValidateTest@429bd883]" started-at="2022-08-16T17:59:58 IST" name="closeDriver" finished-at="2022-08-16T17:59:59 IST" duration-ms="113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- com.tests.TargetValidateTest -->
      <class name="com.tests.UnicornSearchTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:09 IST" name="setUp" finished-at="2022-08-16T17:59:18 IST" duration-ms="8477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testVerifyUnicornNameReturnedIfPartOfNameEnteredLowerCase()[pri:0, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:18 IST" name="testVerifyUnicornNameReturnedIfPartOfNameEnteredLowerCase" finished-at="2022-08-16T17:59:19 IST" duration-ms="807" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Search Text = bobi]]>
            </line>
            <line>
              <![CDATA[Unicorn Name Returned = true]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUnicornNameReturnedIfPartOfNameEnteredLowerCase -->
        <test-method signature="testVerifyUnicornNameReturnedIfPartOfNameEnteredAllCaps()[pri:1, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:19 IST" name="testVerifyUnicornNameReturnedIfPartOfNameEnteredAllCaps" finished-at="2022-08-16T17:59:19 IST" duration-ms="762" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Search Text = BOBI]]>
            </line>
            <line>
              <![CDATA[Unicorn Name Returned = true]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUnicornNameReturnedIfPartOfNameEnteredAllCaps -->
        <test-method signature="testVerifyUnicornNameReturnedIfPartOfNameEnteredSentenceCaps()[pri:2, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:19 IST" name="testVerifyUnicornNameReturnedIfPartOfNameEnteredSentenceCaps" finished-at="2022-08-16T17:59:20 IST" duration-ms="776" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Search Text = Bobi]]>
            </line>
            <line>
              <![CDATA[Unicorn Name Returned = true]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUnicornNameReturnedIfPartOfNameEnteredSentenceCaps -->
        <test-method signature="testVerifyUnicornNameNotReturnedIfPartOfNamePartiallyEntered()[pri:3, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:20 IST" name="testVerifyUnicornNameNotReturnedIfPartOfNamePartiallyEntered" finished-at="2022-08-16T17:59:23 IST" duration-ms="2846" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Search Text = Bob]]>
            </line>
            <line>
              <![CDATA[Failed to Get Result Unicorn Name]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUnicornNameNotReturnedIfPartOfNamePartiallyEntered -->
        <test-method signature="testVerifyUnicornNameNotReturnedIfPartOfNameEnteredWithSpaces()[pri:4, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:23 IST" name="testVerifyUnicornNameNotReturnedIfPartOfNameEnteredWithSpaces" finished-at="2022-08-16T17:59:26 IST" duration-ms="2854" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Search Text = bobi ]]>
            </line>
            <line>
              <![CDATA[Failed to Get Result Unicorn Name]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUnicornNameNotReturnedIfPartOfNameEnteredWithSpaces -->
        <test-method signature="testVerifyUnicornNameNotReturnedIfNoNameEntered()[pri:5, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:26 IST" name="testVerifyUnicornNameNotReturnedIfNoNameEntered" finished-at="2022-08-16T17:59:29 IST" duration-ms="2866" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Search Text = ]]>
            </line>
            <line>
              <![CDATA[Failed to Get Result Unicorn Name]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUnicornNameNotReturnedIfNoNameEntered -->
        <test-method signature="testVerifyUnicornNameNotReturnedIfTextContainsEnteredPartOfName()[pri:6, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:29 IST" name="testVerifyUnicornNameNotReturnedIfTextContainsEnteredPartOfName" finished-at="2022-08-16T17:59:32 IST" duration-ms="2842" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Search Text = bobii]]>
            </line>
            <line>
              <![CDATA[Failed to Get Result Unicorn Name]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUnicornNameNotReturnedIfTextContainsEnteredPartOfName -->
        <test-method signature="testVerifyUnicornNameNotReturnedIfEntirelyInvalidTextEntered()[pri:7, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:32 IST" name="testVerifyUnicornNameNotReturnedIfEntirelyInvalidTextEntered" finished-at="2022-08-16T17:59:34 IST" duration-ms="2815" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Entered Search Text = abcd ]]>
            </line>
            <line>
              <![CDATA[Failed to Get Result Unicorn Name]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyUnicornNameNotReturnedIfEntirelyInvalidTextEntered -->
        <test-method is-config="true" signature="closeDriver()[pri:0, instance:com.tests.UnicornSearchTest@345965f2]" started-at="2022-08-16T17:59:34 IST" name="closeDriver" finished-at="2022-08-16T17:59:34 IST" duration-ms="111" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- com.tests.UnicornSearchTest -->
    </test> <!-- Test-Automation -->
  </suite> <!-- Test Challenge -->
</testng-results>
